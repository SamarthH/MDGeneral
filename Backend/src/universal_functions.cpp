#include "universal_functions.h"
#include <cmath>
#include <iostream>

double gamma_func(double x) //Lookup table for gamma function (This was generated)
{
	int y = (int)(2*x);
	switch(y)
	{
		case 1 : return 1.7724538509; break;
		case 2 : return 1.0000000000; break;
		case 3 : return 0.8862269255; break;
		case 4 : return 1.0000000000; break;
		case 5 : return 1.3293403882; break;
		case 6 : return 2.0000000000; break;
		case 7 : return 3.3233509704; break;
		case 8 : return 6.0000000000; break;
		case 9 : return 11.6317283966; break;
		case 10 : return 24.0000000000; break;
		case 11 : return 52.3427777846; break;
		case 12 : return 120.0000000000; break;
		case 13 : return 287.8852778150; break;
		case 14 : return 720.0000000000; break;
		case 15 : return 1871.2543057978; break;
		case 16 : return 5040.0000000000; break;
		case 17 : return 14034.4072934834; break;
		case 18 : return 40320.0000000000; break;
		case 19 : return 119292.4619946090; break;
		case 20 : return 362880.0000000000; break;
		case 21 : return 1133278.3889487856; break;
		case 22 : return 3628800.0000000000; break;
		case 23 : return 11899423.0839622490; break;
		case 24 : return 39916800.0000000000; break;
		case 25 : return 136843365.4655658600; break;
		case 26 : return 479001600.0000000000; break;
		case 27 : return 1710542068.3195732000; break;
		case 28 : return 6227020800.0000000000; break;
		case 29 : return 23092317922.3142400000; break;
		case 30 : return 87178291200.0000000000; break;
		case 31 : return 334838609873.5564600000; break;
		case 32 : return 1307674368000.0000000000; break;
		case 33 : return 5189998453040.1250000000; break;
		case 34 : return 20922789888000.0000000000; break;
		case 35 : return 85634974475162.0620000000; break;
		case 36 : return 355687428096000.0000000000; break;
		case 37 : return 1498612053315336.0000000000; break;
		case 38 : return 6402373705728000.0000000000; break;
		case 39 : return 27724322986333716.0000000000; break;
		case 40 : return 121645100408832000.0000000000; break;
		case 41 : return 540624298233507460.0000000000; break;
		case 42 : return 2432902008176640000.0000000000; break;
		case 43 : return 11082798113786903000.0000000000; break;
		case 44 : return 51090942171709440000.0000000000; break;
		case 45 : return 238280159446418390000.0000000000; break;
		case 46 : return 1124000727777607700000.0000000000; break;
		case 47 : return 5361303587544414300000.0000000000; break;
		case 48 : return 25852016738884978000000.0000000000; break;
		case 49 : return 125990634307293730000000.0000000000; break;
		case 50 : return 620448401733239410000000.0000000000; break;
		case 51 : return 3086770540528696600000000.0000000000; break;
		case 52 : return 15511210043330986000000000.0000000000; break;
		case 53 : return 78712648783481758000000000.0000000000; break;
		case 54 : return 403291461126605650000000000.0000000000; break;
		case 55 : return 2085885192762266500000000000.0000000000; break;
		case 56 : return 10888869450418352000000000000.0000000000; break;
		case 57 : return 57361842800962329000000000000.0000000000; break;
		case 58 : return 304888344611713840000000000000.0000000000; break;
		case 59 : return 1634812519827426400000000000000.0000000000; break;
		case 60 : return 8841761993739700800000000000000.0000000000; break;
		case 61 : return 48226969334909077000000000000000.0000000000; break;
		case 62 : return 265252859812191030000000000000000.0000000000; break;
		case 63 : return 1470922564714726900000000000000000.0000000000; break;
		case 64 : return 8222838654177922400000000000000000.0000000000; break;
		case 65 : return 46334060788513895000000000000000000.0000000000; break;
		case 66 : return 263130836933693520000000000000000000.0000000000; break;
		case 67 : return 1505856975626701700000000000000000000.0000000000; break;
		case 68 : return 8683317618811885900000000000000000000.0000000000; break;
		case 69 : return 50446208683494509000000000000000000000.0000000000; break;
		case 70 : return 295232799039604120000000000000000000000.0000000000; break;
		case 71 : return 1740394199580560700000000000000000000000.0000000000; break;
		case 72 : return 10333147966386144000000000000000000000000.0000000000; break;
		case 73 : return 61783994085109903000000000000000000000000.0000000000; break;
		case 74 : return 371993326789901180000000000000000000000000.0000000000; break;
		case 75 : return 2255115784106511300000000000000000000000000.0000000000; break;
		case 76 : return 13763753091226343000000000000000000000000000.0000000000; break;
		case 77 : return 84566841903994176000000000000000000000000000.0000000000; break;
		case 78 : return 523022617466601040000000000000000000000000000.0000000000; break;
		case 79 : return 3255823413303775800000000000000000000000000000.0000000000; break;
		case 80 : return 20397882081197442000000000000000000000000000000.0000000000; break;
		case 81 : return 128605024825499150000000000000000000000000000000.0000000000; break;
		case 82 : return 815915283247897680000000000000000000000000000000.0000000000; break;
		case 83 : return 5208503505432715400000000000000000000000000000000.0000000000; break;
		case 84 : return 33452526613163803000000000000000000000000000000000.0000000000; break;
		case 85 : return 216152895475457690000000000000000000000000000000000.0000000000; break;
		case 86 : return 1405006117752879800000000000000000000000000000000000.0000000000; break;
		case 87 : return 9186498057706952400000000000000000000000000000000000.0000000000; break;
		case 88 : return 60415263063373834000000000000000000000000000000000000.0000000000; break;
		case 89 : return 399612665510252430000000000000000000000000000000000000.0000000000; break;
		case 90 : return 2658271574788448500000000000000000000000000000000000000.0000000000; break;
		case 91 : return 17782763615206234000000000000000000000000000000000000000.0000000000; break;
		case 92 : return 119622220865480190000000000000000000000000000000000000000.0000000000; break;
		case 93 : return 809115744491883610000000000000000000000000000000000000000.0000000000; break;
		case 94 : return 5502622159812088500000000000000000000000000000000000000000.0000000000; break;
		case 95 : return 37623882118872588000000000000000000000000000000000000000000.0000000000; break;
		case 96 : return 258623241511168180000000000000000000000000000000000000000000.0000000000; break;
		case 97 : return 1787134400646448000000000000000000000000000000000000000000000.0000000000; break;
		case 98 : return 12413915592536073000000000000000000000000000000000000000000000.0000000000; break;
		case 99 : return 86676018431352735000000000000000000000000000000000000000000000.0000000000; break;
		case 100 : return 608281864034267520000000000000000000000000000000000000000000000.0000000000; break;
		case 101 : return 4290462912351960500000000000000000000000000000000000000000000000.0000000000; break;
		case 102 : return 30414093201713376000000000000000000000000000000000000000000000000.0000000000; break;
		case 103 : return 216668377073774010000000000000000000000000000000000000000000000000.0000000000; break;
		case 104 : return 1551118753287382200000000000000000000000000000000000000000000000000.0000000000; break;
		case 105 : return 11158421419299361000000000000000000000000000000000000000000000000000.0000000000; break;
		case 106 : return 80658175170943877000000000000000000000000000000000000000000000000000.0000000000; break;
		case 107 : return 585817124513216470000000000000000000000000000000000000000000000000000.0000000000; break;
		case 108 : return 4274883284060025500000000000000000000000000000000000000000000000000000.0000000000; break;
		case 109 : return 31341216161457078000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 110 : return 230843697339241380000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 111 : return 1708096280799410800000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 112 : return 12696403353658276000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 113 : return 94799343584367300000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 114 : return 710998587804863480000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 115 : return 5356162912516752400000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 116 : return 40526919504877221000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 117 : return 307979367469713280000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 118 : return 2350561331282878900000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 119 : return 18016792996978227000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 120 : return 138683118545689860000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 121 : return 1071999183320204600000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 122 : return 8320987112741391600000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 123 : return 64855950590872371000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 124 : return 507580213877224840000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 125 : return 3988640961338651000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 126 : return 31469973260387939000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 127 : return 249290060083665690000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 128 : return 1982608315404440100000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 129 : return 15829918815312771000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 130 : return 126886932185884170000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 131 : return 1021029763587673800000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 132 : return 8247650592082471500000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 133 : return 66877449514992637000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 134 : return 544344939077443070000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 135 : return 4447350392747010000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 136 : return 36471110918188683000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 137 : return 300196151510423190000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 138 : return 2480035542436830500000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 139 : return 20563436378463987000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 140 : return 171122452428141300000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 141 : return 1429158828303247000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 142 : return 11978571669969890000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 143 : return 100755697395378920000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 144 : return 850478588567862180000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 145 : return 7204032363769593000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 146 : return 61234458376886077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 147 : return 522292346373295470000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 148 : return 4470115461512683400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 149 : return 38388487458437218000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 150 : return 330788544151938560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 151 : return 2859942315653572500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 152 : return 24809140811395391000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 153 : return 215925644831844720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 154 : return 1885494701666049800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 155 : return 16518311829636121000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 156 : return 145183092028285840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 157 : return 1280169166796799300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 158 : return 11324281178206295000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 159 : return 100493279593548750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 160 : return 894618213078297290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 161 : return 7989215727687125800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 162 : return 71569457046263779000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 163 : return 643131866078813630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 164 : return 5797126020747365500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 165 : return 52415247085423308000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 166 : return 475364333701283980000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 167 : return 4324257884547423100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 168 : return 39455239697206569000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 169 : return 361075533359709810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 170 : return 3314240134565352000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 171 : return 30510882568895480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 172 : return 281710411438054940000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 173 : return 2608680459640563400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 174 : return 24227095383672724000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 175 : return 225650859758908720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 176 : return 2107757298379526900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 177 : return 19744450228904514000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 178 : return 185482642257398360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 179 : return 1747383845258049600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 180 : return 16507955160908452000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 181 : return 156390854150595430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 182 : return 1485715964481760700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 183 : return 14153372300628886000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 184 : return 135200152767840230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 185 : return 1295033565507543000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 186 : return 12438414054641300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 187 : return 119790604809447730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 188 : return 1156772507081640900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 189 : return 11200421549683362000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 190 : return 108736615665674240000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 191 : return 1058439836445077700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 192 : return 10329978488239052000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 193 : return 101081004380504920000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 194 : return 991677934870949100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 195 : return 9754316922718725200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 196 : return 96192759682482062000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 197 : return 951045899965075650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 198 : return 9426890448883242000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 199 : return 93678021146559952000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;
		case 200 : return 933262154439440960000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000.0000000000; break;

	}	
	std::cerr<<"Error 0005"<<std::endl;
	exit(0005);
}
double vol_unit_sphere(int dim) //Lookup table for volume of unit sphere (Don't worry. This was generated)
{
	switch(dim)
	{
		case 1 : return 1.00000000000000000000000000000000000000000000000000; break;
		case 2 : return 2.00000000000000000000000000000000000000000000000000; break;
		case 3 : return 2.09439510239319530000000000000000000000000000000000; break;
		case 4 : return 3.14159265358979310000000000000000000000000000000000; break;
		case 5 : return 2.63189450695716200000000000000000000000000000000000; break;
		case 6 : return 3.28986813369645280000000000000000000000000000000000; break;
		case 7 : return 2.36238298516570030000000000000000000000000000000000; break;
		case 8 : return 2.58385639002498470000000000000000000000000000000000; break;
		case 9 : return 1.64925445136935320000000000000000000000000000000000; break;
		case 10 : return 1.62348485056670700000000000000000000000000000000000; break;
		case 11 : return 0.94205193969494994000000000000000000000000000000000; break;
		case 12 : return 0.85005467995911499000000000000000000000000000000000; break;
		case 13 : return 0.45531437739164149000000000000000000000000000000000; break;
		case 14 : return 0.38150364824416833000000000000000000000000000000000; break;
		case 15 : return 0.19072164041165221000000000000000000000000000000000; break;
		case 16 : return 0.14981613233019797000000000000000000000000000000000; break;
		case 17 : return 0.07049055345856949900000000000000000000000000000000; break;
		case 18 : return 0.05229569563530957900000000000000000000000000000000; break;
		case 19 : return 0.02331080051504426400000000000000000000000000000000; break;
		case 20 : return 0.01642917732222563800000000000000000000000000000000; break;
		case 21 : return 0.00697457520451049730000000000000000000000000000000; break;
		case 22 : return 0.00469216207091164520000000000000000000000000000000; break;
		case 23 : return 0.00190532819342606160000000000000000000000000000000; break;
		case 24 : return 0.00122840515761905790000000000000000000000000000000; break;
		case 25 : return 0.00047886120441158620000000000000000000000000000000; break;
		case 26 : return 0.00029685758606214188000000000000000000000000000000; break;
		case 27 : return 0.00011143606236063699000000000000000000000000000000; break;
		case 28 : return 0.00006661468653823034200000000000000000000000000000; break;
		case 29 : return 0.00002414391136945870700000000000000000000000000000; break;
		case 30 : return 0.00001395174732331275500000000000000000000000000000; break;
		case 31 : return 0.00000489356997336868070000000000000000000000000000; break;
		case 32 : return 0.00000273941918097877550000000000000000000000000000; break;
		case 33 : return 0.00000093173354413106949000000000000000000000000000; break;
		case 34 : return 0.00000050624348082740527000000000000000000000000000; break;
		case 35 : return 0.00000016726441470544853000000000000000000000000000; break;
		case 36 : return 0.00000008835615557195009700000000000000000000000000; break;
		case 37 : return 0.00000002840414359165587500000000000000000000000000; break;
		case 38 : return 0.00000001460942364443554200000000000000000000000000; break;
		case 39 : return 0.00000000457611532507977980000000000000000000000000; break;
		case 40 : return 0.00000000229484289972698610000000000000000000000000; break;
		case 41 : return 0.00000000070128245303660023000000000000000000000000; break;
		case 42 : return 0.00000000034330769499642849000000000000000000000000; break;
		case 43 : return 0.00000000010247180476982383000000000000000000000000; break;
		case 44 : return 0.00000000004902422420552841400000000000000000000000; break;
		case 45 : return 0.00000000001430776306955404900000000000000000000000; break;
		case 46 : return 0.00000000000669626707008812930000000000000000000000; break;
		case 47 : return 0.00000000000191273035526018520000000000000000000000; break;
		case 48 : return 0.00000000000087653930974433809000000000000000000000; break;
		case 49 : return 0.00000000000024526610744422827000000000000000000000; break;
		case 50 : return 0.00000000000011014917824301923000000000000000000000; break;
		case 51 : return 0.00000000000003021671377730793800000000000000000000; break;
		case 52 : return 0.00000000000001330937881412391900000000000000000000; break;
		case 53 : return 0.00000000000000358221154786475860000000000000000000; break;
		case 54 : return 0.00000000000000154861654467760510000000000000000000; break;
		case 55 : return 0.00000000000000040923089026823443000000000000000000; break;
		case 56 : return 0.00000000000000017375436999952764000000000000000000; break;
		case 57 : return 0.00000000000000004511006170135775800000000000000000; break;
		case 58 : return 0.00000000000000001882294663171168200000000000000000; break;
		case 59 : return 0.00000000000000000480398096420229870000000000000000; break;
		case 60 : return 0.00000000000000000197113436190327210000000000000000; break;
		case 61 : return 0.00000000000000000049482463295485745000000000000000; break;
		case 62 : return 0.00000000000000000019975810421270078000000000000000; break;
		case 63 : return 0.00000000000000000004935039465734114600000000000000; break;
		case 64 : return 0.00000000000000000001961120602155140800000000000000; break;
		case 65 : return 0.00000000000000000000477042576330030510000000000000; break;
		case 66 : return 0.00000000000000000000186698244743460040000000000000; break;
		case 67 : return 0.00000000000000000000044736520992476779000000000000; break;
		case 68 : return 0.00000000000000000000017250877474240097000000000000; break;
		case 69 : return 0.00000000000000000000004073736976728423600000000000; break;
		case 70 : return 0.00000000000000000000001548435141172866800000000000; break;
		case 71 : return 0.00000000000000000000000360507666443580560000000000; break;
		case 72 : return 0.00000000000000000000000135126457335248670000000000; break;
		case 73 : return 0.00000000000000000000000031029266752382252000000000; break;
		case 74 : return 0.00000000000000000000000011473305018108969000000000; break;
		case 75 : return 0.00000000000000000000000002599501772681656100000000; break;
		case 76 : return 0.00000000000000000000000000948538177823317010000000; break;
		case 77 : return 0.00000000000000000000000000212118848624684030000000; break;
		case 78 : return 0.00000000000000000000000000076408219771773890000000; break;
		case 79 : return 0.00000000000000000000000000016870658646259057000000; break;
		case 80 : return 0.00000000000000000000000000006001087547721980800000; break;
		case 81 : return 0.00000000000000000000000000001308660179365643900000; break;
		case 82 : return 0.00000000000000000000000000000459828598865184400000; break;
		case 83 : return 0.00000000000000000000000000000099066920615436335000; break;
		case 84 : return 0.00000000000000000000000000000034395098764413125000; break;
		case 85 : return 0.00000000000000000000000000000007323009647511012100; break;
		case 86 : return 0.00000000000000000000000000000002512916037157572900; break;
		case 87 : return 0.00000000000000000000000000000000528871570362937370; break;
		case 88 : return 0.00000000000000000000000000000000179421785486868330; break;
		case 89 : return 0.00000000000000000000000000000000037337057081903402; break;
		case 90 : return 0.00000000000000000000000000000000012526003626211318; break;
		case 91 : return 0.00000000000000000000000000000000002577974159014736; break;
		case 92 : return 0.00000000000000000000000000000000000855469586324882; break;
		case 93 : return 0.00000000000000000000000000000000000174170853314086; break;
		case 94 : return 0.00000000000000000000000000000000000057181637612080; break;
		case 95 : return 0.00000000000000000000000000000000000011519449962968; break;
		case 96 : return 0.00000000000000000000000000000000000003742529430049; break;
		case 97 : return 0.00000000000000000000000000000000000000746173595403; break;
		case 98 : return 0.00000000000000000000000000000000000000239949040067; break;
		case 99 : return 0.00000000000000000000000000000000000000047357040114; break;
		case 100 : return 0.00000000000000000000000000000000000000015076442830; break;

	}

	std::cerr<<"Error 0006"<<std::endl;
	exit(0006);
}
double surface_unit_sphere(int dim){
	return 2*M_PI*vol_unit_sphere(dim-1);
}